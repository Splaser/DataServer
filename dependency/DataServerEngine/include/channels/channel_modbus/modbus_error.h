#ifndef modbus_error_h__
#define modbus_error_h__

#include "../../utils/string.h"

class MODBUS_ERROR
{
	enum MODBUS_ERROR_ENUM
	{
		WRONG_CRC = 0,		// неверный CRC
		SERVER_NOT_ALIVE,	// сервер не отвечает
		WRONG_REQUEST,		// неправильный запрос
		UNKNOW_ERROR,		// незивестная ошибка
		TIMEOUT,			// таймут
		CODE_01,			// Принятый код функции не может быть обработан на подчиненном.
		CODE_02,			// Адрес данных, указанный в запросе, не доступен данному подчиненному.
		CODE_03,			// Величина, содержащаяся в поле данных запроса, является недопустимой величиной для подчиненного.
		CODE_04,			// Невосстанавливаемая ошибка имела место, пока подчиненный пытался выполнить затребованное действие.
		CODE_05,			// Подчиненный принял запрос и обрабатывает его, но это требует много времени. Этот ответ предохраняет главного от генерации ошибки тайм-аута.
		CODE_06,			// Подчиненный занят обработкой команды. Главный должен повторить сообщение позже, когда подчиненный освободится.
		CODE_07,			// Подчиненный не может выполнить программную функцию, принятую в запросе. Этот код возвращается для неудачного программного запроса, использующего функции с номерами 13 или 14. Главный должен запросить диагностическую информацию или информацию об ошибках с подчиненного.
		CODE_08				// Подчиненный пытается читать расширенную память, но обнаружил ошибку паритета. Главный может повторить запрос, но обычно в таких случаях требуется ремонт.
	};

};

#endif // modbus_error_h__